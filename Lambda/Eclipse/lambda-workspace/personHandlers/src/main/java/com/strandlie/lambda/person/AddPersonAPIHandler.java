package com.strandlie.lambda.person;

import com.amazonaws.services.lambda.runtime.Context;

import common.APIHandler;
import common.APIRequest;
import common.APIResponse;
import exceptions.DatabaseErrorException;
import exceptions.InvalidCreatePersonRequestFormatException;

import java.sql.PreparedStatement;
import java.sql.SQLException;


public class AddPersonAPIHandler extends APIHandler {
	
	private PersonRequest request;
	

    @Override
    public APIResponse handleRequest(APIRequest request, Context context) {
        context.getLogger().log("Received create request with values: \n" + request.toString() + "\n");

        this.request = APIRequestIsPersonRequest(request);
		PersonResponse response = new PersonResponse();
		response.setPersonIsAdded(false);
		
		
		String firstName = this.request.getFirstName();
		String lastName = this.request.getLastName();
		if (firstName == null) {
			throw new InvalidCreatePersonRequestFormatException("firstName");
		}
		else if (lastName == null) { 
			throw new InvalidCreatePersonRequestFormatException("lastName");
		}
		
		String email = this.request.getEmail();
		String phoneNr = this.request.getPhoneNr();
		String pictureURL = this.request.getPictureURL();
		
		try {
			int id = createInDatabase(firstName, lastName, email, phoneNr, pictureURL);
			response.setId(id);
			response.setPersonIsAdded(true);
		}
		catch (SQLException e) {
			context.getLogger().log("Database error: " + e.toString());
			throw new DatabaseErrorException("Could not add the person to the database", e.toString());
		} finally {
			closeDatabaseConnection();
		}
		context.getLogger().log("\nCreate request successfully processed\n");
		
		return response;
    }
    
	protected int createInDatabase(String firstName, String lastName, String email, String phoneNr, String pictureURL) throws SQLException  {
		
		String sql = "INSERT INTO person (firstName, lastName, email, phoneNr, pictureURL)" +
					  "VALUES(?, ?, ?, ?, ?)";

		getConnection();
		
		statement = connection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
		setStringOrNull(1, firstName);
		setStringOrNull(2, lastName);
		setStringOrNull(3, email);
		setStringOrNull(4, phoneNr);
		setStringOrNull(5, pictureURL);
		statement.executeUpdate();
		
		// Gets the key generated by the DB for the object inserted
		resultSet =  statement.getGeneratedKeys();
		
		if (resultSet.next()) {
			int id = resultSet.getInt(1);
			connection.close();
			return id;
		}
		connection.close();
		return -1;
	}
	
	private PersonRequest APIRequestIsPersonRequest(APIRequest request) {
		try {
			PersonRequest r = (PersonRequest) request;
			return r;
		}
		catch (ClassCastException e) {
			throw new RuntimeException("API Request: " + request.toString() + " is not" + 
			" a PersonRequest.");
		}
	}
}
